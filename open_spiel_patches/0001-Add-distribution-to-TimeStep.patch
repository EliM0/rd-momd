From 1c05387e07d772facd7bf4397694ef09a8f163ea Mon Sep 17 00:00:00 2001
From: Elisa <elisamecp@gmail.com>
Date: Thu, 8 Jun 2023 00:41:40 +0200
Subject: [PATCH] Add distribution to TimeStep

---
 open_spiel/python/rl_environment.py | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

diff --git a/open_spiel/python/rl_environment.py b/open_spiel/python/rl_environment.py
index 8a0a7482..64b9bf63 100644
--- a/open_spiel/python/rl_environment.py
+++ b/open_spiel/python/rl_environment.py
@@ -174,6 +174,7 @@ class Environment(object):
     self._enable_legality_check = enable_legality_check
 
     if isinstance(game, str):
+      print('hi')
       if kwargs:
         game_settings = {key: val for (key, val) in kwargs.items()}
         logging.info("Using game settings: %s", game_settings)
@@ -235,6 +236,16 @@ class Environment(object):
         "current_player": [],
         "serialized_state": []
     }
+    
+    if self.game.get_type().short_name == 'mfg_crowd_modelling_2d':
+      observations = {
+        "info_state": [],
+        "legal_actions": [],
+        "current_player": [],
+        "serialized_state": [],
+        "distribution": []
+      }
+
     rewards = []
     step_type = StepType.LAST if self._state.is_terminal() else StepType.MID
     self._should_reset = step_type == StepType.LAST
@@ -245,6 +256,9 @@ class Environment(object):
       observations["info_state"].append(
           self._state.observation_tensor(player_id) if self._use_observation
           else self._state.information_state_tensor(player_id))
+      
+      if self.game.get_type().short_name == 'mfg_crowd_modelling_2d':
+        observations["distribution"].append(self._state.distribution_tensor(player_id))
 
       observations["legal_actions"].append(self._state.legal_actions(player_id))
     observations["current_player"] = self._state.current_player()
@@ -349,10 +363,24 @@ class Environment(object):
         "current_player": [],
         "serialized_state": []
     }
+
+    if self.game.get_type().short_name == 'mfg_crowd_modelling_2d':
+      observations = {
+        "info_state": [],
+        "legal_actions": [],
+        "current_player": [],
+        "serialized_state": [],
+        "distribution": []
+      }
+
     for player_id in range(self.num_players):
       observations["info_state"].append(
           self._state.observation_tensor(player_id) if self._use_observation
           else self._state.information_state_tensor(player_id))
+      
+      if self.game.get_type().short_name == 'mfg_crowd_modelling_2d':
+        observations["distribution"].append(self._state.distribution_tensor(player_id))
+        
       observations["legal_actions"].append(self._state.legal_actions(player_id))
     observations["current_player"] = self._state.current_player()
 
@@ -399,6 +427,7 @@ class Environment(object):
         legal_actions=(self._game.num_distinct_actions(),),
         current_player=(),
         serialized_state=(),
+        distribution=tuple([self._game.distribution_tensor_size()])
     )
 
   def action_spec(self):
-- 
2.25.1

